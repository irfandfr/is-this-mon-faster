/*
* This file contains reusable sass mixins
* v.0.0
*/

/*
 For font size and line height, if browser doesn't support rem; fallback to pixel value
*/
@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin line-height($size) {
  line-height: $size;
  line-height: calculateRem($size);
}

@mixin letter-spacing($size) {
  letter-spacing: $size;
  letter-spacing: calculateRem($size);
}


/*
 Mixin for breakpoints
*/

@mixin breakpoint {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

/*
  Mixin for Tooltip, 
  Tip: Add &:hover properties to the element in the style to make it appear
  ex: &:hover{
    .yourToolTipClassName{
      display: inline-block;
    }
  }
*/

@mixin tooltip{
  display: none;
    background: var(--icon-bg);
    color: var(--light-font);
    padding: 3px 6px;
    border-radius: 4px;
    @include font-size(12px);
    position: absolute;
    white-space: nowrap;
    top: -30px;
    left: 50%;
    margin-left: -50px;
    width: 100px;
    text-align: center;

    &::before{
      content: '';
      width: 0; 
      height: 0; 
      border-left: 6px solid transparent;
      border-right: 6px solid transparent;
      border-top: 6px solid var(--icon-bg);
      position: absolute;
      bottom: -6px;
      left: 44px;
    }
}


/*
 Mixin for creating animation
*/


@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
      @content;
  }
  @-moz-keyframes #{$animation-name} {
      @content;
  }  
  @-ms-keyframes #{$animation-name} {
      @content;
  }
  @-o-keyframes #{$animation-name} {
      @content;
  }  
  @keyframes #{$animation-name} {
      @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@mixin transition($str){
  -webkit-transition: #{$str};
  -moz-transition: #{$str};
  -ms-transition: #{$str};
  -o-transition: #{$str};
  transition: #{$str};
}

@mixin movingGradient($str){
  &::before{
    position: absolute;
    content: "";
    height: 100%;
    width: 200px;
    @include animation(load 1s cubic-bezier(0.4, 0.0, 0.2, 1) infinite);
    @if $str == dark{
      background: linear-gradient(to right, transparent 0%, $basic-300 50%, transparent 100%);
    } @else if $str == darker{
      background: linear-gradient(to right, transparent 0%, $basic-400 50%, transparent 100%);
    } @else if $str == bright{
      background: linear-gradient(to right, transparent 0%, $basic-200 50%, transparent 100%);
    } @else{
      background: linear-gradient(to right, transparent 0%, $basic-200 50%, transparent 100%);
    }
  }
}


/*
* Maintaining aspect ratios for an element
*/
@mixin maintain-ratio($ratio: 1 1) {
  $width: 100%;
  $height: percentage(nth($ratio, 2) / nth($ratio, 1));
  
  width: $width;
  height: 0;
  padding-bottom: $height;
}
